#remove.packages("credi")
#library (devtools)
#install_github("marcus-waldman/credi")
library(shiny)
library(credi)
#setwd("C:/Users/jseiden/Desktop")
#mydata <- read.csv("Central_Tigray_YC_Y1_CREDI.csv")
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
checkboxInput("reverse", "Check here if your data needs to be reverse-coded", TRUE),
# Button
downloadLink("downloadData", "Download")
)
),
mainPanel(
tableOutput("contents")
)
)
server <- function(input, output) {
output$contents <- renderTable({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
temp <- read.csv(inFile$datapath, header = TRUE)
for.download <- temp[1,]
for.download
})
#credi_list <- credi::score(data = mydata, interactive = FALSE, reverse_code = input$reverse )
# Downloadable csv of processed dataset ----
output$downloadData <- downloadHandler(
filename = function() {
paste("CREDI processed", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(for.download, file)
}
)
}
shinyApp(ui, server)
}
install.packages("shiny")
library(shiny)
#remove.packages("credi")
#library (devtools)
#install_github("marcus-waldman/credi")
install.packages("shiny")
library(shiny)
library(credi)
#setwd("C:/Users/jseiden/Desktop")
#mydata <- read.csv("Central_Tigray_YC_Y1_CREDI.csv")
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
checkboxInput("reverse", "Check here if your data needs to be reverse-coded", TRUE),
# Button
downloadLink("downloadData", "Download")
)
),
mainPanel(
tableOutput("contents")
)
)
server <- function(input, output) {
output$contents <- renderTable({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
temp <- read.csv(inFile$datapath, header = TRUE)
for.download <- temp[1,]
for.download
})
#credi_list <- credi::score(data = mydata, interactive = FALSE, reverse_code = input$reverse )
# Downloadable csv of processed dataset ----
output$downloadData <- downloadHandler(
filename = function() {
paste("CREDI processed", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(for.download, file)
}
)
}
shinyApp(ui, server)
}
library(shiny)
install.packages("shiny")
#remove.packages("credi")
#library (devtools)
#install_github("marcus-waldman/credi")
install.packages("shiny")
library(shiny)
library(credi)
#setwd("C:/Users/jseiden/Desktop")
#mydata <- read.csv("Central_Tigray_YC_Y1_CREDI.csv")
## Only run examples in interactive R sessions
if (interactive()) {
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
checkboxInput("reverse", "Check here if your data needs to be reverse-coded", TRUE),
# Button
downloadLink("downloadData", "Download")
)
),
mainPanel(
tableOutput("contents")
)
)
server <- function(input, output) {
output$contents <- renderTable({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
temp <- read.csv(inFile$datapath, header = TRUE)
for.download <- temp[1,]
for.download
})
#credi_list <- credi::score(data = mydata, interactive = FALSE, reverse_code = input$reverse )
# Downloadable csv of processed dataset ----
output$downloadData <- downloadHandler(
filename = function() {
paste("CREDI processed", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(for.download, file)
}
)
}
shinyApp(ui, server)
}
install.Rtools(choose_version = FALSE, check = FALSE, GUI = TRUE,
page_with_download_url = "https://cran.r-project.org/bin/windows/Rtools/")
install.packages("install.Rtools")
